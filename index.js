const express = require('express');
const dotenv = require('dotenv');
const axios = require('axios');
const { setupDatabase, createOrGetConfirmation, markInfoAsSent, getConfirmation } = require('./database.js');
const setupTelegramBot = require('./bot_admin.js');

dotenv.config();
const app = express();
app.use(express.json());

const {
  VERIFY_TOKEN,
  INSTAGRAM_ACCESS_TOKEN,
  PORT = 3000,
  WEBHOOK_PATH,
} = process.env;

let db;
let telegramAdmin; // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –Ω–∞—à –±–æ—Ç –∏ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫

// –†–æ—É—Ç –¥–ª—è Instagram Webhook (–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è)
app.get(WEBHOOK_PATH, (req, res) => {
  const mode = req.query['hub.mode'];
  const token = req.query['hub.verify_token'];
  const challenge = req.query['hub.challenge'];

  if (mode === 'subscribe' && token === VERIFY_TOKEN) {
    console.log('WEBHOOK_VERIFIED');
    res.status(200).send(challenge);
  } else {
    res.sendStatus(403);
  }
});

// –†–æ—É—Ç –¥–ª—è Instagram Webhook (–°–æ–±—ã—Ç–∏—è)
app.post(WEBHOOK_PATH, async (req, res) => {
  console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç Instagram:', JSON.stringify(req.body, null, 2));
  res.sendStatus(200); // –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º Instagram, —á—Ç–æ –≤—Å–µ –û–ö

  const entry = req.body.entry?.[0];
  const change = entry?.changes?.[0];

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  if (change?.field === 'comments') {
    const commentText = change.value.text.toLowerCase();
    const commentId = change.value.id;
    const fromId = change.value.from.id;

    const trigger = await db.get('SELECT * FROM triggers WHERE trigger_phrase = ?', commentText);

    if (trigger) {
      try {
        // –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–º–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–æ–π
        await axios.post(`https://graph.instagram.com/v21.0/${commentId}/replies`,
          { message: trigger.comment_reply },
          { headers: { Authorization: `Bearer ${INSTAGRAM_ACCESS_TOKEN}` } }
        );
        console.log(`–£—Å–ø–µ—à–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Ç—Ä–∏–≥–≥–µ—Ä–æ–º "${commentText}"`);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ –ë–î
        await createOrGetConfirmation(fromId, trigger.id);
        console.log(`‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${fromId}, —Ç—Ä–∏–≥–≥–µ—Ä ID: ${trigger.id}`);

        // –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ–≥–ª–∞—Å–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–î–∞"
        const userProfile = await axios.get(`https://graph.instagram.com/v21.0/${fromId}?fields=id`, { headers: { Authorization: `Bearer ${INSTAGRAM_ACCESS_TOKEN}` } });
        await axios.post(`https://graph.instagram.com/v21.0/me/messages`,
          {
            recipient: { id: userProfile.data.id },
            message: {
              text: `–ô–æ—É, —É–≤–∏–¥–µ–ª —Ç–≤–æ–π –∫–æ–º–º–µ–Ω—Ç üëÄ\n\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–î–∞" –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ "–î–∞" –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.`,
              quick_replies: [
                {
                  content_type: 'text',
                  title: '–î–∞',
                  payload: `confirm_${trigger.id}`
                }
              ]
            },
            messaging_type: 'RESPONSE'
          },
          { headers: { Authorization: `Bearer ${INSTAGRAM_ACCESS_TOKEN}` } }
        );
        console.log(`–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ "${commentText}" (ID: ${trigger.id})`);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞:', error.response ? error.response.data : error.message);
      }
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (change?.field === 'messages') {
    const messageData = change.value;
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—à–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (echo)
    if (messageData.is_echo) {
      console.log('–≠—Ç–æ –Ω–∞—à–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.');
      return;
    }

    const messageText = messageData.text?.toLowerCase();
    const fromId = messageData.from?.id;
    const quickReply = messageData.quick_reply;

    console.log('üì® –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', JSON.stringify(messageData, null, 2));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∂–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è confirm_
    if ((quickReply?.payload?.startsWith('confirm_') || messageText === '–¥–∞') && fromId) {
      try {
        let triggerId;

        // –ï—Å–ª–∏ –µ—Å—Ç—å quickReply —Å payload
        if (quickReply?.payload?.startsWith('confirm_')) {
          triggerId = parseInt(quickReply.payload.split('_')[1]);
          console.log(`üëá –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å payload: confirm_${triggerId}`);
        } else if (messageText === '–¥–∞') {
          // –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞–ª "–î–∞" - –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          console.log('üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª "–î–∞", –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç—Ä–∏–≥–≥–µ—Ä...');
          const lastConfirmation = await db.get(
            'SELECT trigger_id FROM user_confirmations WHERE user_id = ? AND info_sent = 0 ORDER BY created_at DESC LIMIT 1',
            fromId
          );
          
          if (lastConfirmation) {
            triggerId = lastConfirmation.trigger_id;
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Ç—Ä–∏–≥–≥–µ—Ä ID: ${triggerId}`);
          } else {
            console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –æ–¥–∏–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä');
            return;
          }
        }

        const selectedTrigger = await db.get('SELECT * FROM triggers WHERE id = ?', triggerId);

        if (selectedTrigger) {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç—Ä–∏–≥–≥–µ—Ä–∞ (–æ–±—ã—á–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –Ω–µ reply)
          await axios.post(`https://graph.instagram.com/v21.0/me/messages`,
            {
              recipient: { id: fromId },
              message: {
                text: selectedTrigger.direct_message
              }
            },
            { headers: { Authorization: `Bearer ${INSTAGRAM_ACCESS_TOKEN}` } }
          );
          
          // –ü–æ–º–µ—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é
          await markInfoAsSent(fromId, triggerId);
          
          console.log(`‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${fromId} (ID: ${triggerId})`);
        } else {
          console.log(`‚ùå –¢—Ä–∏–≥–≥–µ—Ä —Å ID ${triggerId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î`);
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞:', error.response ? error.response.data : error.message);
      }
    }
  }
});

// –ù–û–í–´–ô –†–û–£–¢: –í–µ–±—Ö—É–∫ –¥–ª—è Telegram
app.post('/tlg/webhook', (req, res) => {
  if (telegramAdmin && telegramAdmin.handleUpdate) {
    telegramAdmin.handleUpdate(req.body); // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—à–µ–º—É –±–æ—Ç—É
  }
  res.sendStatus(200); // –û—Ç–≤–µ—á–∞–µ–º Telegram, —á—Ç–æ –≤—Å–µ –ø–æ–ª—É—á–∏–ª–∏
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –≤–º–µ—Å—Ç–µ
async function startApp() {
  db = await setupDatabase();
  console.log('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞.');

  telegramAdmin = setupTelegramBot(db); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram-–±–æ—Ç–∞

  app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}. –°–ª—É—à–∞–µ—Ç Instagram –∏ Telegram.`);
  });
}

startApp();
